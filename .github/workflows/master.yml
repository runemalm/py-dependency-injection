name: Push on master

on:
  push:
    branches:
      - master

jobs:
  unittests:
    name: Run tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", 3.11, 3.12]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pyenv dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libssl-dev \
            zlib1g-dev \
            libbz2-dev \
            libreadline-dev \
            libsqlite3-dev \
            wget \
            curl \
            llvm \
            libncurses5-dev \
            libncursesw5-dev \
            xz-utils \
            tk-dev \
            libffi-dev \
            liblzma-dev \
            python3-openssl \
            git

      - name: Install pyenv
        run: |
          curl https://pyenv.run | bash

      - name: Add pyenv to PATH
        run: |
          echo 'export PATH="$HOME/.pyenv/bin:$PATH"' >> $HOME/.bashrc
          echo 'eval "$(pyenv init --path)"' >> $HOME/.bashrc
          echo 'eval "$(pyenv virtualenv-init -)"' >> $HOME/.bashrc
          source $HOME/.bashrc

      - name: Debug Print Bashrc
        run: |
          cat $HOME/.bashrc
          echo $PATH
        shell: bash


      # - name: Set up python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: ${{ matrix.python-version }}

      - name: Verify pyenv installation
        run: |
          pyenv --version
          pyenv versions
        shell: bash

      - name: Activate Python version
        run: |
          pyenv install --skip-existing "$(cat .python-version)"
          pyenv global "$(cat .python-version)"
          pyenv rehash
        shell: bash

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      # - name: Generate requirements.txt from Pipfile
      #   run: |
      #     pipenv lock -r > requirements.txt

      # - name: Install dependencies using pip
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt


      - name: Setup virtual environment
        run: |
          pipenv --python ${{ matrix.python-version }} install --dev --deploy

      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r Pipfile

      - name: Run unittests
        run: pipenv run pytest ./tests
