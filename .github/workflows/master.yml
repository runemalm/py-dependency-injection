name: Push on master

on:
  push:
    branches:
      - master

jobs:
  unittests:
    name: Run tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7.17, 3.8.18, 3.9, "3.10", 3.11.0, 3.12]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pyenv and python ${{ matrix.python-version }}
        uses: "gabrielfalcao/pyenv-action@v18"
        with:
          default: 3.7.17
          versions: ${{ matrix.python-version }}

      - name: List installed python versions
        run: |
          pyenv versions

      - name: Verify python version is installed
        run: |
          pyenv versions
          if pyenv versions | grep -q "${{ matrix.python-version }}"; then
            echo "Python ${{ matrix.python-version }} is installed."
          else
            echo "Python ${{ matrix.python-version }} is not installed. Exiting workflow."
            exit 1
          fi

      - name: Display current python version
        run: |
          python -V

      - name: Switch python version
        run: |
          pyenv local "$(cat .python-version)"

      - name: Display current python version
        run: |
          python -V

      - name: Verify python version is same as in .python-version
        run: |
          if python -V | grep -q "$(cat .python-version)"; then
            echo "Python version is '$(python -V)'"
          else
            echo "Python version is '$(python -V)', but should be '$(cat .python-version)'. Exiting workflow."
            exit 1
          fi

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: Setup virtual environment
        run: |
          pipenv --python ${{ matrix.python-version }} install --dev --deploy

      - name: Verify tests running with python version ${{ matrix.python-version }}
        run: |
          if pipenv run python -V | grep -q "${{ matrix.python-version }}"; then
            echo "Python ${{ matrix.python-version }} is being used."
          else
            echo "Python ${{ matrix.python-version }} is not being used. Exiting workflow."
            exit 1
          fi

      - name: Run unittests
        run: |
          PYTHONPATH=./src:./tests pipenv run pytest ./tests
